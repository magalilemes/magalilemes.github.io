<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Magali's Blog</title><link>https://magalilemes.github.io/posts/</link><description>Recent content in Posts on Magali's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 08 Aug 2022 00:00:00 -0300</lastBuildDate><atom:link href="https://magalilemes.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Train of thought writing test cases for Linux kernel's AMDGPU with KUnit</title><link>https://magalilemes.github.io/posts/defect-testing/</link><pubDate>Mon, 08 Aug 2022 00:00:00 -0300</pubDate><guid>https://magalilemes.github.io/posts/defect-testing/</guid><description>&lt;p>There are many ways to approach writing test cases, one of them being writing
test cases that cover discovered bugs. In this post, I&amp;rsquo;ll walk through my train
of thoughts into writing one test case for a bug in the Linux kernel&amp;rsquo;s AMDGPU
Display Mode Library.&lt;/p>
&lt;h1 id="background-story">Background story&lt;/h1>
&lt;p>The file of interest here is located inside the Linux kernel repository at
&lt;code>drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c&lt;/code>. To try and understand
the approach into building the test case, take a look at the &lt;a class="link" href="https://patchwork.freedesktop.org/patch/488777/?series=104903&amp;amp;rev=1" target="_blank" rel="noopener"
>patch series that
fixes the
issue&lt;/a>.&lt;/p>
&lt;p>Before commit &lt;code>8861c27a&lt;/code>, the function &lt;code>dcn21_update_bw_bounding_box&lt;/code> worked
fine, but its 2192-byte frame size triggered a warning for exceeding the stack
size that could be used. An attempt to fix this problem is made by commit
&lt;code>8861c27a&lt;/code>, which removes a very large variable from the function. Although this
solution does fix the stack size problem, the new version of
&lt;code>dcn21_update_bw_bounding_box&lt;/code> is not functionally equivalent to the old one.
Then comes commit &lt;code>9ad5d02c&lt;/code> tackling the two previous issues: the stack size no
longer exceeds the specified limit, and &lt;code>dcn21_update_bw_bounding_box&lt;/code> now
presents the same behavior as it did before &lt;code>8861c27a&lt;/code>.&lt;/p>
&lt;h1 id="setup-and-playing-a-bit">Setup and playing a bit&lt;/h1>
&lt;p>To get a grasp of what was accomplished, it could be desirable to clone the
repository and play around a bit.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git clone --branch &lt;span class="k">for&lt;/span>-amd https://gitlab.freedesktop.org/isinyaaa/linux.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At the moment of writing this post, the commit that introduces the test case is
&lt;code>3013c453&lt;/code>. For reproducibility, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git checkout 3013c453
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the command below to run all KUnit&amp;rsquo;s AMDGPU tests, they are all expected to
run successfully:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./tools/testing/kunit/kunit.py run --arch&lt;span class="o">=&lt;/span>x86_64 --kunitconfig&lt;span class="o">=&lt;/span>drivers/gpu/drm/amd/display/tests
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Roll back &lt;code>drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c&lt;/code> to the commit
version that introduced the issue:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git checkout 8861c27a -- drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When running the KUnit tests again, it is natural and expected that the test
will fail:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./tools/testing/kunit/kunit.py run --arch&lt;span class="o">=&lt;/span>x86_64 --kunitconfig&lt;span class="o">=&lt;/span>drivers/gpu/drm/amd/display/tests
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Roll back &lt;code>drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c&lt;/code> to a point
before the problematic commit was introduced:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git checkout 8861c27a^ -- drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally run the KUnit tests again, and notice that they all pass:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./tools/testing/kunit/kunit.py run --arch&lt;span class="o">=&lt;/span>x86_64 --kunitconfig&lt;span class="o">=&lt;/span>drivers/gpu/drm/amd/display/tests
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="writing-a-test-case-for-dcn21_update_bw_bounding_box">Writing a test case for dcn21_update_bw_bounding_box&lt;/h1>
&lt;p>The task at hand is to write a test case that fails when the file of the
function to be tested is at version &lt;code>8861c27a&lt;/code>. Run the command below to have
only &lt;code>dcn20_fpu.c&lt;/code> at that version.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git checkout 8861c27a -- drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If everything worked correctly, the function below is the same as the one in
&lt;code>dcn20_fpu.c&lt;/code>. Now, the next step is getting a gist of the function.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">dcn21_update_bw_bounding_box&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">dc&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">dc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">clk_bw_params&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">bw_params&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">struct&lt;/span> &lt;span class="n">dcn21_resource_pool&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">pool&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TO_DCN21_RES_POOL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">res_pool&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">struct&lt;/span> &lt;span class="n">clk_limit_table&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">clk_table&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">bw_params&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">clk_table&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">closest_clk_lvl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dc_assert_fp_enabled&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_ip&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">max_num_otg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pool&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">base&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">res_cap&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">num_timing_generator&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_ip&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">max_num_dpp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pool&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">base&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pipe_count&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_chans&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bw_params&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">num_channels&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ASSERT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">num_entries&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Copy dcn2_1_soc.clock_limits to clock_limits to avoid copying over null states later */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_states&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">num_entries&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* loop backwards*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_states&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dcfclk_mhz&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dcfclk_mhz&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">closest_clk_lvl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* clk_table[1] is reserved for min DF PState. skip here to fill in later. */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dcfclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dcfclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">fabricclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">fclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">socclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">socclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dram_speed_mts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">entries&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">memclk_mhz&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dppclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dppclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dram_bw_per_chan_gbps&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dram_bw_per_chan_gbps&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dscclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dscclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dtbclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dtbclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_d18_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_d18_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">num_entries&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_states&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">num_entries&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* fill in min DF PState */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">construct_low_pstate_lvl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clk_table&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* duplicate last level */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_states&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_states&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_states&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_states&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dml_init_instance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">dc&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">dml&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">dcn2_1_ip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">DML_PROJECT_DCN21&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This function has only two parameters:&lt;/p>
&lt;ul>
&lt;li>&lt;code>struct dc *&lt;/code>: a pointer to a Display Core&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> control structure;&lt;/li>
&lt;li>&lt;code>struct clk_bw_params *&lt;/code>: a pointer to a structure for clocks and bandwidth.&lt;/li>
&lt;/ul>
&lt;p>After the declaration and initialization of variables, &lt;code>dc_assert_fp_enabled&lt;/code> is
called to ensure that the function is being executed under FPU protection, as it
is about to perform some floating point operations. Then some values from the
global variable &lt;code>dcn2_1_ip&lt;/code> are updated based on the provided parameters.
Finally, before the first loop begins, it is assured that the clock table from
&lt;code>struct clk_bw_params&lt;/code> has at least one entry.&lt;/p>
&lt;p>In the first loop, an odd thing happens:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Copy dcn2_1_soc.clock_limits to clock_limits to avoid copying over null states later */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_states&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It seems like nothing meaninful is happening, since the elements of the clock
limits array are being set to themselves. At this point, it is useful to go back
and see how the function behaved before &lt;code>8861c27a&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Copy dcn2_1_soc.clock_limits to clock_limits to avoid copying over null states later */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">num_states&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That makes more sense, and is coherent with the comment above it. It&amp;rsquo;s important
to notice that commit &lt;code>8861c27a&lt;/code> replaced occurences of &lt;code>clock_limits&lt;/code> wit
&lt;code>dcn2_1_soc.clock_limits&lt;/code>, so that is why the first for loop is like that.&lt;/p>
&lt;h2 id="finding-the-problem">Finding the problem&lt;/h2>
&lt;p>Moving on, there&amp;rsquo;s another loop. Notice its last lines:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">num_entries&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[...]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dppclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dppclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dram_bw_per_chan_gbps&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dram_bw_per_chan_gbps&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dscclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dscclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dtbclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dtbclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_d18_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_d18_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compare with the previous version, which used &lt;code>clock_limits&lt;/code> to store the clock
limits values before assigning them to &lt;code>dcn2_1_soc.clock_limits&lt;/code> directly:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">num_entries&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[...]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dppclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dppclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dram_bw_per_chan_gbps&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dram_bw_per_chan_gbps&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dscclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dscclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dtbclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dtbclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_d18_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_d18_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">closest_clk_lvl&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">phyclk_mhz&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">clk_table&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">num_entries&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now to make it easier to visualize, suppose that before
&lt;code>dcn21_update_bw_bounding_box&lt;/code> is called, some values from
&lt;code>dcn2_1_soc.clock_limits&lt;/code> are as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">757.89&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">847.06&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">900.00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Now after invoking &lt;code>dcn21_update_bw_bounding_box&lt;/code>, what happens with the
values of &lt;code>dcn2_1_soc.clock_limits[k].dispclk&lt;/code> for k = 3, closest_clk_lvl = 2;
and for k = 4, closest_clk_lvl = 3?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Previous version (8861c27a^): * &lt;code>clock_limits[3].dispclk_mhz&lt;/code> is set to
&lt;code>dcn2_1_soc.clock_limits[2].dispclk_mhz&lt;/code>; * then
&lt;code>clock_limits[4].dispclk_mhz&lt;/code> is set to
&lt;code>dcn2_1_soc.clock_limits[3].dispclk_mhz&lt;/code>.&lt;/p>
&lt;p>After the end of the loop, &lt;code>clock_limits&lt;/code> is copied onto
&lt;code>dcn2_1_soc.clock_limits&lt;/code>, resulting in:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">757.89&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">847.06&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>Problematic version (8861c27a): * &lt;code>dcn2_1_soc.clock_limits[3].dispclk_mhz&lt;/code> is
set to &lt;code>dcn2_1_soc.clock_limits[2].dispclk_mhz&lt;/code>; * then in the next
iteration, &lt;code>dcn2_1_soc.clock_limits[4].dispclk_mhz&lt;/code> is set to
&lt;code>dcn2_1_soc.clock_limits[3].dispclk_mhz&lt;/code>.&lt;/p>
&lt;p>After the end of the loop, this is the result:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">757.89&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dcn2_1_soc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clock_limits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">dispclk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">757.89&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The part to pay attention here is that by dropping the intermediate variable,
&lt;code>dcn2_1_soc.clock_limits&lt;/code> ends up being overwritten by itself, and some values
that it stored may be lost in the way.&lt;/p>
&lt;h2 id="building-the-test-case">Building the test case&lt;/h2>
&lt;p>After understanding where the problem lays, it is time to write a test case that
covers it.&lt;/p>
&lt;p>The function parameters will be as simple as possible, only the necessary struct
members will have their values set:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="n">dc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">res_pool&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">resource_pool&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">pipe_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">res_cap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">resource_caps&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">num_timing_generator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>bw_params.clk_table.entries[]&lt;/code> values will be set in a way so that a situation
where (k = 3, closest_clk_lvl = 2) and (k = 4, closest_clk_lvl = 3) will be
created, closely following what was discussed above.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="n">bw_params&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">num_channels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">clk_table&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">entries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">voltage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">dcfclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">fclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">400&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">memclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">800&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">socclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">voltage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">dcfclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">201&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">fclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">800&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">memclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1600&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">socclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">voltage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">dcfclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">553&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">fclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1067&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">memclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1067&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">socclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">voltage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">dcfclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">602&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">fclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1333&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">memclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1600&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">socclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">voltage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">dispclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1372&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">dppclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1372&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">phyclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">810&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">phyclk_d18_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">667&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">dtbclk_mhz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">600&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">num_entries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>dcn2_1_soc&lt;/code> is a global variable, and its original values will be used for this
test case, so no need to set it differently.&lt;/p>
&lt;p>After having the function input, the next step is building the expected values.
For this test case, &lt;code>dcn2_1_soc&lt;/code> is the one expected to change. One easy way (is
it the right one, though?) to obtain the expected values is running the function
when it is in its correct state, and seeing what was yielded. Finally, one test
case is ready: it is now time to think about other ways to write others.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a class="link" href="https://www.kernel.org/doc/html/latest/gpu/amdgpu/display/index.html" target="_blank" rel="noopener"
>drm/amd/display - Display Core
(DC)&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>My first contribution to the Linux kernel</title><link>https://magalilemes.github.io/posts/first-contribution/</link><pubDate>Mon, 21 Feb 2022 00:01:00 -0300</pubDate><guid>https://magalilemes.github.io/posts/first-contribution/</guid><description>&lt;h2 id="finding-something-to-fix">Finding something to fix&lt;/h2>
&lt;p>There are many ways to start contributing to the Linux kernel, and one of them
is by fixing something, be it a coding style disagreement, compile errors or
static check warnings.&lt;/p>
&lt;p>Apart from finding something to fix yourself, an alternative is to look at what
automated bots designed to look for bugs and warnings in the kernel have already
found&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. One of these bots is the &lt;em>kernel test robot&lt;/em>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>, and an advantage of
going through the warnings found by this bot is that it provides the ways to
reproduce the settings that led to the compilation warnings.&lt;/p>
&lt;p>In my case, my Linux kernel mentor sent me a &lt;a class="link" href="https://lore.kernel.org/all/202201252155.rqBWi1tb-lkp@intel.com/" target="_blank" rel="noopener"
>warning reported by the kernel
test robot&lt;/a>
so that I could work on it and fix it. As mentioned before, the email sent by
the bot contains details to help finding the warning:&lt;/p>
&lt;ul>
&lt;li>the Git tree;&lt;/li>
&lt;li>the specific commit that triggered the warning;&lt;/li>
&lt;li>a .config file to use when building the kernel&lt;/li>
&lt;li>compiler version;&lt;/li>
&lt;li>static analysis tool used and its version (in this case, sparse);&lt;/li>
&lt;li>steps to reproduce the warning using the tools above.&lt;/li>
&lt;/ul>
&lt;p>Some emails sent by the kernel test robot can be found &lt;a class="link" href="https://linuxlists.cc/profile/44393/kbuild_test_robot%3e" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p>
&lt;h2 id="fixing">Fixing&lt;/h2>
&lt;p>After having found something to fix, it&amp;rsquo;s necessary to find the right tree to
work on. The &lt;a class="link" href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/MAINTAINERS" target="_blank" rel="noopener"
>MAINTAINERS&lt;/a>
file on the kernel code contains this information, and there&amp;rsquo;s also the
&lt;code>./scripts/get_maintainer.pl&lt;/code> script to help with that.&lt;/p>
&lt;p>Given that I had to fix a warning found under the &lt;code>drivers/gpu/drm/amd/&lt;/code>
directory, I cloned the tree found at &lt;a class="link" href="https://gitlab.freedesktop.org/agd5f/linux.git" target="_blank" rel="noopener"
>https://gitlab.freedesktop.org/agd5f/linux.git&lt;/a>,
made the change accordingly, and recompiled to ensure that the previous warning
had been solved. After that, I commited the change.&lt;/p>
&lt;h2 id="sending-the-patch">Sending the patch&lt;/h2>
&lt;p>To send the patch to the appropriate mailing lists, I used &lt;a class="link" href="github.com/kworkflow/kworkflow/" >kworkflow&lt;/a>
and its &lt;code>git send-email&lt;/code> wrapper feature. I had already configured my .gitconfig
file using it, so to send my last commit I just ran&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ kw mail -s -1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, the email was sent, and all of the steps above led to my first
contribution to the Linux kernel &lt;a class="link" href="https://lore.kernel.org/lkml/20220202213856.409403-1-magalilemes00@gmail.com/" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a class="link" href="https://bottest.wiki.kernel.org/" target="_blank" rel="noopener"
>https://bottest.wiki.kernel.org/&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>&lt;a class="link" href="https://01.org/lkp/documentation/0-day-test-service" target="_blank" rel="noopener"
>https://01.org/lkp/documentation/0-day-test-service&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>cd ~/linux</title><link>https://magalilemes.github.io/posts/cd-linux/</link><pubDate>Mon, 21 Feb 2022 00:00:00 -0300</pubDate><guid>https://magalilemes.github.io/posts/cd-linux/</guid><description>&lt;p>During this year, I will be contributing to the Linux kernel. More specifically,
I&amp;rsquo;ll add more tests to the AMD graphics driver DML library using the KUnit
framework.&lt;/p>
&lt;h2 id="amd-graphics-driver-in-the-linux-kernel">AMD Graphics Driver in the Linux Kernel&lt;/h2>
&lt;p>AMD graphics drivers live under the &lt;code>drivers/gpu/drm/amd&lt;/code> directory in the Linux
kernel code. DRM stands for Direct Rendering Manager, and its folder intends to
provide an interface for interacting with GPUs. Inside DRM, we can find the AMD
directory, supporting AMD graphic cards.&lt;/p>
&lt;h2 id="display">Display&lt;/h2>
&lt;p>AMD display driver has essentially two pieces: Display Core (DC) and Display
Manager (DM)&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. The first one is OS-agnostic and handles hardware programming
and resource management. The second one, though, is OS-dependent and has
implementations of amdgpu base driver and DRM.&lt;/p>
&lt;h2 id="display-mode-library-dml">Display Mode Library (DML)&lt;/h2>
&lt;p>In &lt;code>drivers/gpu/drm/amd/display/dc/dml&lt;/code>, we find the Display Mode Library, which
&amp;ldquo;handles clock, watermark, and bandwidth calculation for
&lt;a class="link" href="https://www.kernel.org/doc/html/latest/gpu/amdgpu/display/dcn-overview.html" target="_blank" rel="noopener"
>DCN&lt;/a>&amp;rdquo;&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.
This is a mathematical library that AMD graphic drivers use. In its
&lt;a class="link" href="https://gitlab.freedesktop.org/agd5f/linux/-/blob/amd-staging-drm-next/drivers/gpu/drm/amd/display/dc/dml/Makefile" target="_blank" rel="noopener"
>Makefile&lt;/a>,
it is also described as a &amp;ldquo;&amp;lsquo;utils&amp;rsquo; sub-component of DAL. It provides the general
basic services required by other DAL subcomponents.&amp;rdquo;&lt;/p>
&lt;h2 id="kunit">KUnit&lt;/h2>
&lt;p>One way to ensure that things are working the way they are supposed to is
through testing. Naturally, that also applies to software applications, and when
it comes to the Linux kernel, it couldn&amp;rsquo;t be different&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>: kselftest and KUnit
are two tools used to write tests, each serving a different purpose.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>kselftest&lt;/strong> uses scripts and programs to test features in the userspace.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>KUnit&lt;/strong> is a framework that provides unit testing, which is the process of
testing small components of code. This allows developers to test the behavior of
pieces of code inside the kernel source code, instead of testing an entire
feature.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="capstone-project">Capstone Project&lt;/h2>
&lt;p>Due to DML&amp;rsquo;s mathematical nature, introducing unit testing to this library is a
reasonable idea, and KUnit seems like a perfect fit for this purpose. As part of
my university capstone project, I&amp;rsquo;ll investigate how some functions in DML work,
add unit tests, refactor these functions and possibly make them robust and
well-structured.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a class="link" href="https://www.kernel.org/doc/html/latest/gpu/amdgpu/display/index.html" target="_blank" rel="noopener"
>https://www.kernel.org/doc/html/latest/gpu/amdgpu/display/index.html&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>&lt;a class="link" href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=061bfa06a42a9f6cd192bae61a4bf0e746eccb39" target="_blank" rel="noopener"
>https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=061bfa06a42a9f6cd192bae61a4bf0e746eccb39&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>&lt;a class="link" href="https://www.kernel.org/doc/html/latest/dev-tools/testing-overview.html" target="_blank" rel="noopener"
>https://www.kernel.org/doc/html/latest/dev-tools/testing-overview.html&lt;/a>&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item></channel></rss>